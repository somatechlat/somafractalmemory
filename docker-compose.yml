services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: soma
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-soma}
      POSTGRES_DB: somamemory
      POSTGRES_HOST_AUTH_METHOD: md5
    container_name: somafractalmemory_postgres
    ports:
      - "${POSTGRES_HOST_PORT:-40021}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U soma"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - core

  redis:
    image: redis:7
    container_name: somafractalmemory_redis
    ports:
      - "${REDIS_HOST_PORT:-40022}:6379"
    volumes:
      - redisdata:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - core

  qdrant:
    image: qdrant/qdrant:latest
    container_name: somafractalmemory_qdrant
    ports:
      - "${QDRANT_HOST_PORT:-40023}:6333"
    volumes:
      - qdrantdata:/qdrant/storage
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/6333' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - core

  kafka:
    image: apache/kafka:latest
    container_name: somafractalmemory_kafka
    ports:
      - "${KAFKA_INTERNAL_PORT:-40024}:9092"
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: '1'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:40024'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      CLUSTER_ID: '5L6g3nShT-eMCtK--X86sw'
    volumes:
      - kafkadata:/var/lib/kafka/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - core

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: somafractalmemory_api
    ports:
      - "${API_PORT:-9595}:9595"
    command: ["uvicorn", "somafractalmemory.http_api:app", "--host", "0.0.0.0", "--port", "9595"]
    # Port 9595 is the PUBLIC API ENTRY POINT (externally accessible)
    environment:
      SOMA_API_TOKEN: ${SOMA_API_TOKEN:-devtoken}
      CONFIG_FILE: /app/config.yaml
      SOMA_FORCE_HASH_EMBEDDINGS: "1"
    depends_on:
      - postgres
      - redis
      - qdrant
      - kafka
    volumes:
      - ./:/app:delegated
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9595/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: always
    profiles:
      - core

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
  qdrantdata:
    driver: local
  kafkadata:
    driver: local

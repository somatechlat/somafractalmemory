services:
  # -----------------------------------------------------------------
  # FastAPI server – runs the canonical evented_enterprise memory mode.
  # Uses the Dockerfile in the repository to build the image.
  # All configuration is passed via environment variables; defaults match the
  # shared-infrastructure alignment already used in the code base.
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENABLE_REAL_EMBEDDINGS: "1"
    container_name: somafractalmemory_api
    labels:
      - "com.soma.project=somafractalmemory"
      - "com.soma.service=api"
    ports:
      - "9595:9595"  # host 9595 → container 9595 (default)
    environment:
      MEMORY_MODE: evented_enterprise
      SOMA_RATE_LIMIT_MAX: "5000"
      SOMA_FAST_START: "0"
      SOMA_API_TOKEN: dev-token
      # Increase keep-alive so long-lived agent clients don't hit idle resets
      UVICORN_TIMEOUT_KEEP_ALIVE: "120"
      UVICORN_WORKERS: "1"
      UVICORN_TIMEOUT_GRACEFUL: "60"
      # Shared infrastructure endpoints (Docker shared infra stack)
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_URL: postgresql://soma:soma@postgres:5432/somaagent01
      QDRANT_HOST: quadrant
      QDRANT_PORT: 8080
      QDRANT_URL: "http://quadrant:8080"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      # Toggle event publishing (true/false). In TEST mode this is forced off.
      EVENTING_ENABLED: "true"
      USE_REAL_INFRA: "1"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9595/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - soma_shared

  # -----------------------------------------------------------------
  # Consumer – update bootstrap server to point to kafka service
  somafractalmemory_kube:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENABLE_REAL_EMBEDDINGS: "0"
    container_name: somafractalmemory_consumer
    labels:
      - "com.soma.project=somafractalmemory"
      - "com.soma.service=consumer"
    profiles: [consumer]
    command: ["sh", "-c", "until nc -z kafka 9092; do echo 'Waiting for Kafka...'; sleep 2; done; exec python scripts/run_consumers.py"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_MEMORY_EVENTS_TOPIC: memory.events
      KAFKA_CONSUMER_GROUP: soma-consumer-group
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_URL: postgresql://soma:soma@postgres:5432/somaagent01
      QDRANT_HOST: quadrant
      QDRANT_PORT: 8080
      QDRANT_URL: "http://quadrant:8080"
      USE_REAL_INFRA: "1"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport socket; s=socket.socket(); s.settimeout(1);\nprint('ok') if s.connect_ex(('kafka', 9092))==0 else (_ for _ in ()).throw(SystemExit(1))\nPY"]
      interval: 30s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - soma_shared

networks:
  soma_shared:
    external: true
    name: soma_docker_shared_infra_soma-network

{
  "openapi": "3.1.0",
  "info": {
    "title": "SomaFractalMemory API",
    "version": "0.1.0"
  },
  "paths": {
    "/store": {
      "post": {
        "tags": [
          "memories"
        ],
        "summary": "Wrapper",
        "operationId": "wrapper_store_post",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recall": {
      "post": {
        "tags": [
          "memories"
        ],
        "summary": "Wrapper",
        "operationId": "wrapper_recall_post",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recall_batch": {
      "post": {
        "tags": [
          "memories"
        ],
        "summary": "Recall Batch",
        "operationId": "recall_batch_recall_batch_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecallBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Stats",
        "operationId": "stats_stats_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/neighbors": {
      "get": {
        "tags": [
          "graph"
        ],
        "summary": "Neighbors",
        "operationId": "neighbors_neighbors_get",
        "parameters": [
          {
            "name": "coord",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Coord"
            }
          },
          {
            "name": "link_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Link Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeighborsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/link": {
      "post": {
        "tags": [
          "graph"
        ],
        "summary": "Link",
        "operationId": "link_link_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/shortest_path": {
      "get": {
        "tags": [
          "graph"
        ],
        "summary": "Shortest Path",
        "operationId": "shortest_path_shortest_path_get",
        "parameters": [
          {
            "name": "frm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Frm"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To"
            }
          },
          {
            "name": "link_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Link Type"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/store_bulk": {
      "post": {
        "tags": [
          "memories"
        ],
        "summary": "Store Bulk",
        "operationId": "store_bulk_store_bulk_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreBulkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreBulkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recall_with_scores": {
      "post": {
        "tags": [
          "memories"
        ],
        "summary": "Recall With Scores",
        "operationId": "recall_with_scores_recall_with_scores_post",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Top K"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoresResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recall_with_context": {
      "post": {
        "tags": [
          "memories"
        ],
        "summary": "Recall With Context",
        "operationId": "recall_with_context_recall_with_context_post",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Top K"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Context"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/range": {
      "get": {
        "tags": [
          "memories"
        ],
        "summary": "Range Search",
        "operationId": "range_search_range_get",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Min"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Max"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  },
                  "title": "Response Range Search Range Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "description": "Liveness probe \u2013 checks basic health of all stores and prediction provider.",
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/readyz": {
      "get": {
        "summary": "Readyz",
        "description": "Readiness probe \u2013 same checks for now; can be extended with more strict criteria later.",
        "operationId": "readyz_readyz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchesResponse": {
        "properties": {
          "batches": {
            "items": {
              "items": {
                "additionalProperties": true,
                "type": "object"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Batches"
          }
        },
        "type": "object",
        "required": [
          "batches"
        ],
        "title": "BatchesResponse"
      },
      "BulkItem": {
        "properties": {
          "coord": {
            "type": "string",
            "title": "Coord"
          },
          "payload": {
            "additionalProperties": true,
            "type": "object",
            "title": "Payload"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "episodic"
          }
        },
        "type": "object",
        "required": [
          "coord",
          "payload"
        ],
        "title": "BulkItem"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "kv_store": {
            "type": "boolean",
            "title": "Kv Store"
          },
          "vector_store": {
            "type": "boolean",
            "title": "Vector Store"
          },
          "graph_store": {
            "type": "boolean",
            "title": "Graph Store"
          },
          "prediction_provider": {
            "type": "boolean",
            "title": "Prediction Provider"
          }
        },
        "type": "object",
        "required": [
          "kv_store",
          "vector_store",
          "graph_store",
          "prediction_provider"
        ],
        "title": "HealthResponse"
      },
      "LinkRequest": {
        "properties": {
          "from_coord": {
            "type": "string",
            "title": "From Coord"
          },
          "to_coord": {
            "type": "string",
            "title": "To Coord"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "related"
          },
          "weight": {
            "type": "number",
            "title": "Weight",
            "default": 1.0
          }
        },
        "type": "object",
        "required": [
          "from_coord",
          "to_coord"
        ],
        "title": "LinkRequest"
      },
      "MatchesResponse": {
        "properties": {
          "matches": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Matches"
          }
        },
        "type": "object",
        "required": [
          "matches"
        ],
        "title": "MatchesResponse"
      },
      "NeighborsResponse": {
        "properties": {
          "neighbors": {
            "items": {
              "items": {},
              "type": "array"
            },
            "type": "array",
            "title": "Neighbors"
          }
        },
        "type": "object",
        "required": [
          "neighbors"
        ],
        "title": "NeighborsResponse"
      },
      "OkResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "OkResponse"
      },
      "PathResponse": {
        "properties": {
          "path": {
            "items": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path"
        ],
        "title": "PathResponse"
      },
      "RecallBatchRequest": {
        "properties": {
          "queries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Queries"
          },
          "top_k": {
            "type": "integer",
            "title": "Top K",
            "default": 5
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          }
        },
        "type": "object",
        "required": [
          "queries"
        ],
        "title": "RecallBatchRequest"
      },
      "ResultsResponse": {
        "properties": {
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "ResultsResponse"
      },
      "ScoreItem": {
        "properties": {
          "payload": {
            "additionalProperties": true,
            "type": "object",
            "title": "Payload"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "payload"
        ],
        "title": "ScoreItem"
      },
      "ScoresResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/ScoreItem"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "ScoresResponse"
      },
      "StatsResponse": {
        "properties": {
          "total_memories": {
            "type": "integer",
            "title": "Total Memories"
          },
          "episodic": {
            "type": "integer",
            "title": "Episodic"
          },
          "semantic": {
            "type": "integer",
            "title": "Semantic"
          }
        },
        "type": "object",
        "required": [
          "total_memories",
          "episodic",
          "semantic"
        ],
        "title": "StatsResponse"
      },
      "StoreBulkRequest": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BulkItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "StoreBulkRequest"
      },
      "StoreBulkResponse": {
        "properties": {
          "stored": {
            "type": "integer",
            "title": "Stored"
          }
        },
        "type": "object",
        "required": [
          "stored"
        ],
        "title": "StoreBulkResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}

services:
  # TEST API Server on port 9999
  test_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: soma_test_api
    ports:
      - "9999:9595"
    environment:
      MEMORY_MODE: evented_enterprise
      SOMA_RATE_LIMIT_MAX: "5000"
      UVICORN_WORKERS: "2"
      UVICORN_TIMEOUT_GRACEFUL: "60"
      POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/somamemory_test
      REDIS_URL: redis://redis:6379/1  # Different Redis DB
      QDRANT_URL: http://qdrant:6333
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTING_ENABLED: "true"
      SOMA_MEMORY_NAMESPACE: test_ns
    depends_on:
      - redis
      - qdrant
      - postgres
      - kafka
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9595/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Consumer for TEST environment
  test_consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: soma_test_consumer
    command: ["python", "scripts/run_consumers.py"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_MEMORY_EVENTS_TOPIC: memory.events.test
      KAFKA_CONSUMER_GROUP: test-consumer-group
      POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/somamemory_test
      REDIS_URL: redis://redis:6379/1
      QDRANT_URL: http://qdrant:6333
      SOMA_MEMORY_NAMESPACE: test_ns
    depends_on:
      - redis
      - qdrant
      - postgres
      - kafka
    restart: unless-stopped

  # Infrastructure services (shared with DEV but different DBs/namespaces)
  postgres:
    image: postgres:15-alpine
    container_name: soma_test_postgres
    environment:
      POSTGRES_DB: somamemory_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    command: postgres -c 'shared_preload_libraries=pg_stat_statements'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7
    container_name: soma_test_redis
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  qdrant:
    image: qdrant/qdrant:latest
    container_name: soma_test_qdrant
    volumes:
      - qdrant_test_storage:/qdrant/storage
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka_test
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka_test:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_test:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    ports:
      - "19092:9092"
      - "19093:9093"
    volumes:
      - redpanda_test_data:/bitnami/kafka
    restart: unless-stopped

volumes:
  qdrant_test_storage:
  postgres_test_data:
  redis_test_data:
  redpanda_test_data:

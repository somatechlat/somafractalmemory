# Override file for production-like deployments.
# Enable durable persistence, source credentials from Vault via ExternalSecret,
# and ensure pods restart automatically when secrets rotate.

image:
  repository: ghcr.io/somatechlat/somafractalmemory-runtime
  tag: v2.0.0
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "9595"

env:
  POSTGRES_SSL_MODE: verify-full
  POSTGRES_SSL_ROOT_CERT: /etc/soma/tls/postgres/ca.crt
  POSTGRES_SSL_CERT: /etc/soma/tls/postgres/client.crt
  POSTGRES_SSL_KEY: /etc/soma/tls/postgres/client.key
  QDRANT_TLS: "true"
  QDRANT_TLS_CERT: /etc/soma/tls/qdrant/ca.crt
  KAFKA_SECURITY_PROTOCOL: SASL_SSL
  KAFKA_SSL_CA_LOCATION: /etc/soma/tls/kafka/ca.crt
  KAFKA_SASL_MECHANISM: PLAIN

podSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001
  fsGroupChangePolicy: OnRootMismatch
  supplementalGroups: []
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  enabled: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  privileged: false

podAnnotations:
  sidecar.istio.io/inject: "false"

secret:
  enabled: false
  existingSecret: ""
  rolloutRestart:
    enabled: true
    annotations:
      reloader.stakater.com/auto: "true"

externalSecret:
  enabled: true
  secretStoreRef:
    name: soma-vault-store
    kind: ClusterSecretStore
  target:
    name: soma-memory-runtime-secrets
    creationPolicy: Owner
    deletionPolicy: Retain
  data:
    - secretKey: SOMA_API_TOKEN
      remoteRef:
        key: secret/data/shared-infra/soma-memory/prod
        property: soma_api_token
    - secretKey: POSTGRES_URL
      remoteRef:
        key: secret/data/shared-infra/soma-memory/prod
        property: postgres_dsn
    - secretKey: REDIS_URL
      remoteRef:
        key: secret/data/shared-infra/soma-memory/prod
        property: redis_url
    - secretKey: QDRANT_URL
      remoteRef:
        key: secret/data/shared-infra/soma-memory/prod
        property: qdrant_url
    - secretKey: KAFKA_BOOTSTRAP_SERVERS
      remoteRef:
        key: secret/data/shared-infra/soma-memory/prod
        property: kafka_bootstrap_servers

resources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "1500m"
    memory: "4Gi"

consumer:
  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "1500m"
      memory: "4Gi"
  metrics:
    port: 8001
    service:
      enabled: true
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8001"
  env:
    KAFKA_SECURITY_PROTOCOL: SASL_SSL
    KAFKA_SSL_CA_LOCATION: /etc/soma/tls/kafka/ca.crt
    KAFKA_SASL_MECHANISM: PLAIN

serviceMonitor:
  api:
    enabled: true
    interval: 15s
    scrapeTimeout: 5s
    labels:
      release: kube-prometheus-stack
  consumer:
    enabled: true
    interval: 15s
    scrapeTimeout: 5s
    labels:
      release: kube-prometheus-stack

prometheusRule:
  enabled: true
  labels:
    release: kube-prometheus-stack
  api:
    service: soma-memory-somafractalmemory
    latency:
      enabled: true
      percentile: 0.95
      window: 5m
      thresholdSeconds: 0.75
      for: 5m
      severity: warning
    errorRate:
      enabled: true
      window: 5m
      thresholdRatio: 0.05
      for: 10m
      severity: critical
  consumer:
    service: soma-memory-somafractalmemory-consumer-metrics
    failureRate:
      enabled: true
      window: 5m
      thresholdPerSecond: 0.2
      for: 5m
      severity: warning
    stall:
      enabled: true
      window: 10m
      minMessages: 1
      for: 10m
      severity: critical

hpa:
  api:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 60
  consumer:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 65

postgres:
  persistence:
    enabled: true
    size: 50Gi
    storageClass: premium-rwo
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "2"
      memory: "8Gi"

qdrant:
  persistence:
    enabled: true
    size: 200Gi
    storageClass: premium-rwo
  resources:
    requests:
      cpu: "2"
      memory: "8Gi"
    limits:
      cpu: "4"
      memory: "16Gi"

redis:
  persistence:
    enabled: true
    size: 20Gi
    storageClass: premium-rwo
  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "1"
      memory: "4Gi"

redpanda:
  enabled: false

backup:
  postgres:
    enabled: true
    schedule: "0 2 * * *"
    awsSecretName: soma-memory-backup-aws
    s3:
      bucket: somatech-prod-backups
      prefix: somafractalmemory/postgres
      region: us-east-1
  qdrant:
    enabled: true
    schedule: "30 2 * * *"
    awsSecretName: soma-memory-backup-aws
    s3:
      bucket: somatech-prod-backups
      prefix: somafractalmemory/qdrant
      region: us-east-1
    collection: api_ns

restore:
  postgres:
    enabled: false
    awsSecretName: soma-memory-backup-aws
    s3Uri: ""
    s3:
      region: us-east-1
  qdrant:
    enabled: false
    awsSecretName: soma-memory-backup-aws
    snapshotUri: ""
    s3:
      region: us-east-1
    collection: api_ns

ingress:
  enabled: true
  className: nginx
  host: api.soma.example.com
  tls: true
  tlsSecretName: soma-api-tls

networkPolicy:
  enabled: true
  ingress:
    - from:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 9595
  egress:
    - to:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 5432
        - protocol: TCP
          port: 6379
        - protocol: TCP
          port: 6333
    - to:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 9092
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
      # Allow S3 backups over HTTPS; tighten with provider-specific CIDR if available.

tls:
  mounts:
    - name: postgres-tls
      secretName: soma-memory-postgres-tls
      mountPath: /etc/soma/tls/postgres
    - name: kafka-tls
      secretName: soma-memory-kafka-tls
      mountPath: /etc/soma/tls/kafka
    - name: qdrant-tls
      secretName: soma-memory-qdrant-tls
      mountPath: /etc/soma/tls/qdrant

{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  serviceName: {{ .Release.Name }}-postgres
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        ports:
        - containerPort: 40021
        env:
        - name: POSTGRES_USER
          value: soma
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-somafractalmemory-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: somafractalmemory
        {{- if .Values.postgres.persistence.enabled }}
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
        {{- end }}
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: pgdata
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.postgres.persistence.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.postgres.persistence.size }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  ports:
  - port: 40021
  selector:
    app: postgres
{{- end }}

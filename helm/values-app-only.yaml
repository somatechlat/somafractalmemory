# App-only values: deploys only SomaFractalMemory pods, connects to shared infrastructure
# Use this when shared infra is deployed separately (soma-infra chart or external services)

replicaCount: 1

image:
  repository: somafractalmemory-runtime
  tag: "local"
  pullPolicy: Never

service:
  type: ClusterIP
  port: 9595

# Disable all infrastructure components - use shared infra instead
postgres:
  enabled: false

redis:
  enabled: false

qdrant:
  enabled: false

redpanda:
  enabled: false

# Enable consumer for background processing
consumer:
  enabled: true
  replicaCount: 1
  image:
    repository: somafractalmemory-runtime
    tag: "local"
    pullPolicy: Never
  env:
    # Connect to shared infra services (assumes soma-infra namespace)
    REDIS_HOST: "sharedinfra-redis.soma-infra.svc.cluster.local"
    REDIS_PORT: "6379"
    QDRANT_HOST: "sharedinfra-qdrant.soma-infra.svc.cluster.local"
    QDRANT_PORT: "6333"
    KAFKA_MEMORY_EVENTS_TOPIC: "memory.events"
    KAFKA_CONSUMER_GROUP: "soma-consumer-group"
    SOMA_RATE_MAX: "5000"
    KAFKA_SECURITY_PROTOCOL: "PLAINTEXT"

# API environment - connect to shared infrastructure
env:
  MEMORY_MODE: "evented_enterprise"
  SOMA_MEMORY_NAMESPACE: "api_ns"
  REDIS_HOST: "sharedinfra-redis.soma-infra.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  QDRANT_HOST: "sharedinfra-qdrant.soma-infra.svc.cluster.local"
  QDRANT_PORT: "6333"
  QDRANT_TLS: "false"
  EVENTING_ENABLED: "true"
  UVICORN_PORT: "9595"
  SOMA_RATE_LIMIT_MAX: "5000"
  UVICORN_WORKERS: "4"
  UVICORN_TIMEOUT_GRACEFUL: "60"
  POSTGRES_POOL_SIZE: "15"
  SKIP_SCHEMA_VALIDATION: "true"
  VECTOR_INDEX_ASYNC: "true"

# Secret configuration - use shared infra endpoints
secret:
  enabled: true
  data:
    SOMA_API_TOKEN: "changeme-dev-token"
    # Connect to shared Postgres (no SSL in dev)
    POSTGRES_URL: "postgresql://postgres:postgres@sharedinfra-postgres.soma-infra.svc.cluster.local:5432/somamemory"
    # Connect to shared Redis
    REDIS_URL: "redis://sharedinfra-redis.soma-infra.svc.cluster.local:6379/0"
    # Connect to shared Qdrant
    QDRANT_URL: "http://sharedinfra-qdrant.soma-infra.svc.cluster.local:6333"
    # Connect to shared Kafka
    KAFKA_BOOTSTRAP_SERVERS: "sharedinfra-kafka.soma-infra.svc.cluster.local:9092"

# Health probe configuration
probe:
  path: /healthz
  port: 9595
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 5

# Pod security context
podSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001
  fsGroupChangePolicy: OnRootMismatch

containerSecurityContext:
  enabled: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  privileged: false

# Resource limits
resources:
  requests:
    cpu: "300m"
    memory: "2Gi"
  limits:
    cpu: "1200m"
    memory: "4Gi"

# ServiceMonitor for Prometheus (optional)
serviceMonitor:
  api:
    enabled: false
    interval: 30s
    scrapeTimeout: 5s
    path: /metrics
  consumer:
    enabled: false
    interval: 30s
    scrapeTimeout: 5s
    path: /metrics

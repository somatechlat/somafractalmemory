[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "somafractalmemory"
version = "0.2.0"
description = "A world-class Python package for advanced fractal memory algorithms."
authors = [
  { name="SomaTech", email="ai@somatech.lat" }
]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]

# Keep runtime dependencies lean (core runtime only). Heavy optional stacks stay external.
dependencies = [
  "numpy",
  "redis>=4.0.0",
  "qdrant-client",
  "scikit-learn",
  "cryptography",
  "prometheus-client",
  "structlog",
  "pydantic-settings",
  "opentelemetry-api",
  "opentelemetry-sdk",
  "networkx",
  "psycopg2-binary",
  "redis[asyncio]",
  "opentelemetry-instrumentation-psycopg2",
  "opentelemetry-instrumentation-redis",
]

[project.optional-dependencies]
hash-embeddings = ["transformers", "Pillow", "tenacity", "torch", "torchvision", "torchaudio"]
api = [
  "fastapi",
  "uvicorn",
  "opentelemetry-sdk",
  "opentelemetry-instrumentation-fastapi",
  "jsonschema",
  "httpx",
]
events = [
    "aiokafka",
    "confluent-kafka",
]
dev = [
  "pytest",
  "fakeredis>=2.0.0",
  "testcontainers",
  "ruff",
  "bandit",
  "build",
  "alembic>=1.14.0",
  "requests",
]
ops = [
  "alembic>=1.14.0",
]

[project.urls]
"Homepage" = "https://github.com/somatechlat/somafractalmemory"
"Bug Tracker" = "https://github.com/somatechlat/somafractalmemory/issues"

[project.scripts]
soma = "somafractalmemory.cli:main"

# Explicit package discovery configuration to avoid relying on implicit discovery.
# The project hosts source under both the top-level package directory and `src/` (legacy/tests reference paths).
# We include only the canonical runtime package to prevent accidental inclusion of test modules.
[tool.setuptools.packages.find]
include = ["somafractalmemory", "common"]
exclude = ["tests", "docs", "site"]

[tool.setuptools.package-data]
somafractalmemory = ["py.typed", "**/*.json", "**/*.yaml"]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "B", "UP"]
ignore = ["E501"]

[tool.isort]
known_first_party = ["somafractalmemory"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
strict_optional = false
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-q -ra --maxfail=1"
testpaths = ["tests"]

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "somafractalmemory"
version = "0.1.0"
description = "Small, elegant, in-memory fractal memory for agents (FAISS + exact rerank)."
authors = [
  { name="SomaTech", email="ai@somatech.lat" }
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Keep core minimal; everything else as extras
dependencies = [
    "numpy>=1.24",
]

[project.optional-dependencies]
faiss = ["faiss-cpu>=1.7.4"]
qdrant = ["qdrant-client>=1.8.2"]
redis = ["redis>=4", "fakeredis>=2"]
observability = ["prometheus-client>=0.19", "structlog>=24.1", "langfuse>=2.0.0"]
ml = ["scikit-learn>=1.2", "scipy>=1.10", "transformers>=4.40"]
dev = [
  "pytest>=8",
  "mypy>=1.8",
  "ruff>=0.5",
]

[project.urls]
Homepage = "https://github.com/somatechlat/somafractalmemory"
Issues = "https://github.com/somatechlat/somafractalmemory/issues"

[project.scripts]
soma = "somafractalmemory.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["somafractalmemory*"]
exclude = ["tests*", "examples*", "benchmark_*_ns_qdrant*"]

[tool.setuptools.exclude-package-data]
somafractalmemory = ["*.pyc", "__pycache__"]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "B", "UP"]
ignore = ["E501"]
src = ["src"]

[tool.ruff.isort]
known-first-party = ["somafractalmemory"]
